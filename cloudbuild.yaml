steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/genomic-twin-app:$COMMIT_SHA'
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/genomic-twin-app:latest'
      - '.'

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/genomic-twin-app'

  # Initialize Terraform
  - name: 'hashicorp/terraform:latest'
    dir: 'terraform'
    args: ['init']

  # Plan Terraform deployment
  - name: 'hashicorp/terraform:latest'
    dir: 'terraform'
    args:
      - 'plan'
      - '-var=project_id=$PROJECT_ID'
      - '-var=region=$_REGION'
      - '-var=image_url=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/genomic-twin-app:$COMMIT_SHA'
      - '-out=tfplan'

  # Apply Terraform deployment
  - name: 'hashicorp/terraform:latest'
    dir: 'terraform'
    args:
      - 'apply'
      - '-auto-approve'
      - 'tfplan'

  # Get and display the deployed service URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe dnalang-genomic-twin --platform=managed --region=$_REGION --format='value(status.url)')
        echo "ðŸŽ‰ DNA-Lang Genomic Twin deployed successfully!"
        echo "Application URL: $$SERVICE_URL"
        echo "$$SERVICE_URL" > /workspace/service_url.txt

# Substitutions for customization
substitutions:
  _REGION: 'us-central1'
  _REPO_NAME: 'dnalang-repo'

# Options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout for the entire build
timeout: '1800s'

# Artifacts to save
artifacts:
  objects:
    location: 'gs://$PROJECT_ID-build-artifacts'
    paths: ['service_url.txt']